[{"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\index.js":"1","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\App.js":"2","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\serviceWorker.js":"3","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\index.js":"4","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\store\\index.js":"5","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\bold.js":"6","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\light.js":"7","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\semibold.js":"8","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\heavy.js":"9","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\medium.js":"10","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\api\\index.js":"11","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\containers\\workorderscontainer\\index.js":"12","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\index.js":"13","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\index.js":"14","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\index.js":"15","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\context\\globalcontext\\index.js":"16","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\oauthtokenreducer\\index.js":"17","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\ctasectionreducer\\index.js":"18","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\emergencyworkordersreducer\\index.js":"19","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\useraccountdatareducer\\index.js":"20","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\pendingworkordersreducer\\index.js":"21","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderunassignedreducer\\index.js":"22","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderdetailsreducer\\index.js":"23","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderassignedtomereducer\\index.js":"24","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderattachmentsreducer\\index.js":"25","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workordershistoryreducer\\index.js":"26","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\advancedsearchreducer\\index.js":"27","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\warrantymodalreducer\\index.js":"28","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workordersnotesreducer\\index.js":"29","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\index.js":"30","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\index.js":"31","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\index.js":"32","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\index.js":"33","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\index.js":"34","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\alertComponent\\index.js":"35","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\useraccountdataactions\\index.js":"36","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\emercencyworkordersactions\\index.js":"37","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\index.js":"38","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\advancedsearchcomponent\\index.js":"39","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\pendingworkordersactions\\index.js":"40","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\assignedtomeworkordersactions\\index.js":"41","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\unassignedworkordersactions\\index.js":"42","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderdetailsactions\\index.js":"43","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\advancedsearchactions\\index.js":"44","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderhistoryactions\\index.js":"45","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderattachmentsactions\\index.js":"46","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workordernotesactions\\index.js":"47","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\warrantymodalactions\\index.js":"48","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\oauthtokenactions\\index.js":"49","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\ctasectionactions\\index.js":"50","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\constants\\index.js":"51","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\initialstate\\index.js":"52","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\index.js":"53","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\index.js":"54","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\index.js":"55","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\common\\index.js":"56","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\index.js":"57","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\index.js":"58","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\locationdetailslayout\\index.js":"59","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbypriority\\index.js":"60","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbystatus\\index.js":"61","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbyassettype\\index.js":"62","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderprioritylayout\\index.js":"63","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderstatuslayout\\index.js":"64","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rowbuilderlayout\\index.js":"65","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderregularrowlayout\\index.js":"66","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\reactwindowtablelayout\\index.js":"67","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendermultiitemlayout\\index.js":"68","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderimagelayout\\index.js":"69","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\tablecolumnslayout\\index.js":"70","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendersingleitemlayout\\index.js":"71","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\boxeddetailslayout\\index.js":"72","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\enhanceddetailslayout\\index.js":"73","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\workorderdesriptionclayout\\index.js":"74","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\index.js":"75","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\maindetailslayout\\index.js":"76","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailsimagelayout\\index.js":"77","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailslayout\\index.js":"78","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\mainactionslayout\\index.js":"79","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\linkactionslayout\\index.js":"80","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\index.js":"81","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\getmodalstyle\\index.js":"82","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\featuredctalayout\\index.js":"83","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\ctasectionlayout\\index.js":"84","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernotnull\\index.js":"85","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernull\\index.js":"86","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\itemkeyhelper\\index.js":"87","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\createitemdatahelper\\index.js":"88","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\popupcomponent\\index.js":"89","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\index.js":"90","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\reactwindowtablelayout\\index.js":"91","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\tablecolumnslayout\\index.js":"92","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\constants\\index.js":"93","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rowbuilderlayout\\index.js":"94","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\renderdateitemlayout\\index.js":"95","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendersingleitemlayout\\index.js":"96","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendermultiitemlayout\\index.js":"97","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\constants\\index.js":"98","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\add-note.js":"99","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\not-fixed.js":"100","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\reassigned.js":"101","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\cancel.js":"102","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\complete.js":"103","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\index.js":"104","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\itemkeyhelper\\index.js":"105","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\createitemdatahelper\\index.js":"106"},{"size":1342,"mtime":1608315096205,"results":"107","hashOfConfig":"108"},{"size":3259,"mtime":1608623895315,"results":"109","hashOfConfig":"108"},{"size":5227,"mtime":1608315096237,"results":"110","hashOfConfig":"108"},{"size":1780,"mtime":1608315096020,"results":"111","hashOfConfig":"108"},{"size":1429,"mtime":1608315096240,"results":"112","hashOfConfig":"108"},{"size":156083,"mtime":1608315096014,"results":"113","hashOfConfig":"108"},{"size":153363,"mtime":1608315096024,"results":"114","hashOfConfig":"108"},{"size":156918,"mtime":1608315096032,"results":"115","hashOfConfig":"108"},{"size":159783,"mtime":1608315096018,"results":"116","hashOfConfig":"108"},{"size":155416,"mtime":1608315096028,"results":"117","hashOfConfig":"108"},{"size":1283,"mtime":1608315096008,"results":"118","hashOfConfig":"108"},{"size":58522,"mtime":1608623895523,"results":"119","hashOfConfig":"108"},{"size":1380,"mtime":1608315096215,"results":"120","hashOfConfig":"108"},{"size":941,"mtime":1608315096123,"results":"121","hashOfConfig":"108"},{"size":1570,"mtime":1608315095986,"results":"122","hashOfConfig":"108"},{"size":89,"mtime":1608315096204,"results":"123","hashOfConfig":"108"},{"size":517,"mtime":1608315096220,"results":"124","hashOfConfig":"108"},{"size":530,"mtime":1608315096212,"results":"125","hashOfConfig":"108"},{"size":545,"mtime":1608315096214,"results":"126","hashOfConfig":"108"},{"size":543,"mtime":1608315096224,"results":"127","hashOfConfig":"108"},{"size":539,"mtime":1608315096222,"results":"128","hashOfConfig":"108"},{"size":541,"mtime":1608315096236,"results":"129","hashOfConfig":"108"},{"size":695,"mtime":1608315096230,"results":"130","hashOfConfig":"108"},{"size":544,"mtime":1608315096227,"results":"131","hashOfConfig":"108"},{"size":552,"mtime":1608315096229,"results":"132","hashOfConfig":"108"},{"size":540,"mtime":1608315096232,"results":"133","hashOfConfig":"108"},{"size":554,"mtime":1608315096210,"results":"134","hashOfConfig":"108"},{"size":533,"mtime":1608315096225,"results":"135","hashOfConfig":"108"},{"size":649,"mtime":1608315096234,"results":"136","hashOfConfig":"108"},{"size":2022,"mtime":1608315096065,"results":"137","hashOfConfig":"108"},{"size":15576,"mtime":1608315096129,"results":"138","hashOfConfig":"108"},{"size":4010,"mtime":1608315096143,"results":"139","hashOfConfig":"108"},{"size":1897,"mtime":1608315096168,"results":"140","hashOfConfig":"108"},{"size":2829,"mtime":1608623847096,"results":"141","hashOfConfig":"108"},{"size":938,"mtime":1608623895366,"results":"142","hashOfConfig":"108"},{"size":553,"mtime":1608315095995,"results":"143","hashOfConfig":"108"},{"size":1096,"mtime":1608315095984,"results":"144","hashOfConfig":"108"},{"size":7446,"mtime":1608315096121,"results":"145","hashOfConfig":"108"},{"size":4884,"mtime":1608315096061,"results":"146","hashOfConfig":"108"},{"size":1066,"mtime":1608315095991,"results":"147","hashOfConfig":"108"},{"size":1101,"mtime":1608315095980,"results":"148","hashOfConfig":"108"},{"size":1076,"mtime":1608315095993,"results":"149","hashOfConfig":"108"},{"size":2077,"mtime":1608623895361,"results":"150","hashOfConfig":"108"},{"size":1968,"mtime":1608315095978,"results":"151","hashOfConfig":"108"},{"size":1047,"mtime":1608315096004,"results":"152","hashOfConfig":"108"},{"size":1084,"mtime":1608315095999,"results":"153","hashOfConfig":"108"},{"size":2019,"mtime":1608315096006,"results":"154","hashOfConfig":"108"},{"size":1264,"mtime":1608315095997,"results":"155","hashOfConfig":"108"},{"size":810,"mtime":1608315095989,"results":"156","hashOfConfig":"108"},{"size":1052,"mtime":1608315095982,"results":"157","hashOfConfig":"108"},{"size":1532,"mtime":1608315096197,"results":"158","hashOfConfig":"108"},{"size":187,"mtime":1608315096217,"results":"159","hashOfConfig":"108"},{"size":167,"mtime":1608315096072,"results":"160","hashOfConfig":"108"},{"size":79,"mtime":1608315096128,"results":"161","hashOfConfig":"108"},{"size":926,"mtime":1608315096183,"results":"162","hashOfConfig":"108"},{"size":5196,"mtime":1608315096136,"results":"163","hashOfConfig":"108"},{"size":1987,"mtime":1608315096086,"results":"164","hashOfConfig":"108"},{"size":237,"mtime":1608315096119,"results":"165","hashOfConfig":"108"},{"size":1362,"mtime":1608315096188,"results":"166","hashOfConfig":"108"},{"size":744,"mtime":1608315096115,"results":"167","hashOfConfig":"108"},{"size":738,"mtime":1608315096118,"results":"168","hashOfConfig":"108"},{"size":720,"mtime":1608315096114,"results":"169","hashOfConfig":"108"},{"size":4865,"mtime":1608315096097,"results":"170","hashOfConfig":"108"},{"size":6394,"mtime":1608623847130,"results":"171","hashOfConfig":"108"},{"size":3047,"mtime":1608640756330,"results":"172","hashOfConfig":"108"},{"size":488,"mtime":1608315096100,"results":"173","hashOfConfig":"108"},{"size":3799,"mtime":1608640756312,"results":"174","hashOfConfig":"108"},{"size":1029,"mtime":1608315096095,"results":"175","hashOfConfig":"108"},{"size":1310,"mtime":1608315096092,"results":"176","hashOfConfig":"108"},{"size":1158,"mtime":1608623847170,"results":"177","hashOfConfig":"108"},{"size":7581,"mtime":1608315096101,"results":"178","hashOfConfig":"108"},{"size":3773,"mtime":1608645689395,"results":"179","hashOfConfig":"108"},{"size":7881,"mtime":1608315096181,"results":"180","hashOfConfig":"108"},{"size":1130,"mtime":1608315096194,"results":"181","hashOfConfig":"108"},{"size":493,"mtime":1608315096146,"results":"182","hashOfConfig":"108"},{"size":1913,"mtime":1608315096192,"results":"183","hashOfConfig":"108"},{"size":992,"mtime":1608315096175,"results":"184","hashOfConfig":"108"},{"size":722,"mtime":1608315096177,"results":"185","hashOfConfig":"108"},{"size":7306,"mtime":1608623895485,"results":"186","hashOfConfig":"108"},{"size":2850,"mtime":1608645754061,"results":"187","hashOfConfig":"108"},{"size":144,"mtime":1608315096080,"results":"188","hashOfConfig":"108"},{"size":210,"mtime":1608315096127,"results":"189","hashOfConfig":"108"},{"size":1349,"mtime":1608315096071,"results":"190","hashOfConfig":"108"},{"size":2416,"mtime":1608315096068,"results":"191","hashOfConfig":"108"},{"size":8622,"mtime":1608645736852,"results":"192","hashOfConfig":"108"},{"size":449,"mtime":1608315096167,"results":"193","hashOfConfig":"108"},{"size":228,"mtime":1608315096083,"results":"194","hashOfConfig":"108"},{"size":239,"mtime":1608640756304,"results":"195","hashOfConfig":"108"},{"size":3492,"mtime":1608623895453,"results":"196","hashOfConfig":"108"},{"size":279,"mtime":1608315096038,"results":"197","hashOfConfig":"108"},{"size":2860,"mtime":1608315096148,"results":"198","hashOfConfig":"108"},{"size":1512,"mtime":1608315096160,"results":"199","hashOfConfig":"108"},{"size":429,"mtime":1608315096162,"results":"200","hashOfConfig":"108"},{"size":4964,"mtime":1608315096158,"results":"201","hashOfConfig":"108"},{"size":638,"mtime":1608315096150,"results":"202","hashOfConfig":"108"},{"size":1121,"mtime":1608315096155,"results":"203","hashOfConfig":"108"},{"size":2135,"mtime":1608315096152,"results":"204","hashOfConfig":"108"},{"size":429,"mtime":1608315096075,"results":"205","hashOfConfig":"108"},{"size":148,"mtime":1608315096034,"results":"206","hashOfConfig":"108"},{"size":150,"mtime":1608315096039,"results":"207","hashOfConfig":"108"},{"size":153,"mtime":1608315096041,"results":"208","hashOfConfig":"108"},{"size":145,"mtime":1608315096035,"results":"209","hashOfConfig":"108"},{"size":149,"mtime":1608315096036,"results":"210","hashOfConfig":"108"},{"size":144,"mtime":1608315096140,"results":"211","hashOfConfig":"108"},{"size":597,"mtime":1608315096142,"results":"212","hashOfConfig":"108"},{"size":225,"mtime":1608315096139,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"1q8nhmn",{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"216"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"216"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"216"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\index.js",[],["430","431"],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\App.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\serviceWorker.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\store\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\bold.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\light.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\semibold.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\heavy.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\fonts\\medium.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\api\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\containers\\workorderscontainer\\index.js",["432"],"//Basic imports\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n//Components\r\nimport { \r\n    CTASectionComponent, \r\n    DataTableComponent, \r\n    WorkOrderDetailsComponent,\r\n    Alert, \r\n} from '../../components'\r\n\r\n\r\n//Material UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n//Actions\r\nimport { \r\n    oauthFetchToken,\r\n    fetchUsersInformation,\r\n    fetchCTAsData, \r\n    fetchSearchData,\r\n    fetchEmergencyWOData, \r\n    fetchPendingWOData, \r\n    fetchDetailsWOData,\r\n    fetchAssignedToMeWOData,\r\n    fetchUnassignedWOData,\r\n    fetchHistoryWOData,\r\n    fetchNotesWOData,\r\n    fetchAttachmentsWOData,\r\n    fetchWarrantyWOData,\r\n    createNoteWOData,\r\n    updateWOStatus,\r\n} from '../../actions';\r\n\r\n//Context\r\nimport { GlobalContext } from '../../context/globalcontext'\r\n\r\n\r\n//Declaring global variables\r\n//Token\r\nlet token\r\n//User ID\r\nlet userId\r\nlet userData\r\n//CTA component\r\nlet ctadata\r\n//Datatable component\r\nlet tmpdata\r\n//Details component\r\nlet detailsdata\r\n//Tab component\r\nlet historydata\r\nlet notesdata\r\nlet attachmentsdata\r\nlet dtlsID\r\nlet trgtID\r\n//Search\r\nlet searchTerm\r\nlet searchBy\r\n//Warranty\r\nlet warrantydata\r\n//Filter\r\nlet filterByAssetType\r\nlet filterByStatus\r\nlet filterByPriority\r\n\r\nlet newNote\r\nlet newNoteAvailable\r\nlet noteDescription\r\n\r\nlet workOrderUpdateResponse\r\nlet updatedStatus\r\nlet reassignToVal\r\n\r\nclass WorkOrdersBuilder extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            targetId: \"emergencyWO\",\r\n            detailsId: \"\",\r\n            loading: false,\r\n            loadingDetails: false,\r\n            loadingAll: false,\r\n            searchTerm: \"\", \r\n            searchBy: 1,\r\n            filterByAssetType: 1,\r\n            filterByStatus: 1,\r\n            filterByPriority: 1,\r\n            newNote: '',\r\n            newNoteAvailable: false,\r\n            noteDescription: '',\r\n            workOrderUpdateResponse: '',\r\n            updatedStatus: '',\r\n            reassignToVal: 1,\r\n            reassignToAvailable: false,\r\n            itsActive: false\r\n        };\r\n    }    \r\n    /**\r\n     * Description: Set state based on search input \r\n     * Author: Carlos Blanco\r\n     * Date: 10/29/2020\r\n     * Ticket: ET-237\r\n     * */\r\n    handleChangeStateSearchTerm = (value) => {\r\n        searchTerm = value     \r\n    }\r\n    handleSearchTerm = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            searchTerm: value,\r\n        }, this.handleChangeStateSearchTerm(value));\r\n    } \r\n    /**\r\n     * Description: Set state based on search select \r\n     * Author: Carlos Blanco\r\n     * Date: 10/30/2020\r\n     * Ticket: ET-237\r\n     * */    \r\n    handleChangeStateSearchBy = (value) => {\r\n        searchBy = value  \r\n    }    \r\n    handleSearchBy = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            searchBy: value\r\n        }, this.handleChangeStateSearchBy(value));\r\n    }\r\n    /**\r\n     * Description: Create Filter Component\r\n     * Author: Carlos Blanco\r\n     * Created: 11/06/2020\r\n     * Ticket: ET-246\r\n     */  \r\n    handleChangeStateFilterByAssetType = (value) => {\r\n        filterByAssetType = value       \r\n        console.log(filterByAssetType)\r\n    }    \r\n    handleFilterByAssetType = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByAssetType: value,\r\n        }, this.handleChangeStateFilterByAssetType(value))\r\n    } \r\n    /**\r\n     * Description: Create Filter Component\r\n     * Author: Carlos Blanco\r\n     * Created: 11/10/2020\r\n     * Ticket: ET-246\r\n     */  \r\n    handleChangeStateFilterByStatus = (value) => {\r\n        filterByStatus = value \r\n        console.log(filterByStatus)\r\n    }    \r\n    handleFilterByStatus = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByStatus: value,\r\n        }, this.handleChangeStateFilterByStatus(value))        \r\n    } \r\n    /**\r\n     * Description: Create Filter Component\r\n     * Author: Carlos Blanco\r\n     * Created: 11/10/2020\r\n     * Ticket: ET-246\r\n     */  \r\n    handleChangeStateFilterByPriority = (value) => {\r\n        filterByPriority = value       \r\n        console.log(filterByPriority)\r\n    }    \r\n    handleFilterByPriority = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByPriority: value,\r\n        }, this.handleChangeStateFilterByPriority(value))        \r\n    }\r\n\r\n    handleChangeStateFilterClearAll = () => {\r\n        filterByPriority = 1;\r\n        filterByStatus = 1;\r\n        filterByAssetType = 1; \r\n    }\r\n\r\n    handleFilterClearAll = (event) => {\r\n        this.setState({\r\n            filterByAssetType: 1,\r\n            filterByStatus: 1,\r\n            filterByPriority: 1,\r\n        }, this.handleChangeStateFilterClearAll()) \r\n    }\r\n\r\n    handleChangeNoteInput = (value) => {\r\n        noteDescription = value;\r\n        console.log(\"description\", noteDescription)\r\n    }\r\n    handleNoteInput = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            noteDescription: value\r\n        }, this.handleChangeNoteInput(value))\r\n    }\r\n\r\n    handleAddNote = (isAvailable) => {\r\n        newNoteAvailable = isAvailable\r\n        console.log(newNoteAvailable)\r\n    }\r\n    createNoteWOData = (event) => {\r\n        this.setState({\r\n            newNoteAvailable: !newNoteAvailable,\r\n            loadingDetails: true\r\n        }, this.handleAddNote(!newNoteAvailable))\r\n    }\r\n\r\n    handleChangeReassignToSelect = (value) => {\r\n        reassignToVal = value\r\n        console.log('reassignToVal', reassignToVal)\r\n    }\r\n    handleReassignToSelect = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            reassignToVal: value\r\n        }, this.handleChangeReassignToSelect(value))\r\n    }\r\n\r\n    handleUpdateStatus = (target) => {\r\n        updatedStatus = target\r\n        console.log(\"updatedStatus\", updatedStatus)\r\n    }\r\n    updateWOStatus = (event) => {\r\n        let target = event.target.parentElement.getAttribute(\"status\")\r\n        if(target !== 'Reassign') {\r\n            target = target.toUpperCase().replace(' ', '_')\r\n            this.setState({\r\n                updatedStatus: target,\r\n                loadingDetails: true,\r\n            }, this.handleUpdateStatus(target))\r\n        } else {\r\n            target = target.toUpperCase().replace(' ', '_')\r\n            this.setState({\r\n                updatedStatus: target,\r\n                reassignToAvailable: !this.state.reassignToAvailable,\r\n                loadingDetails: true,\r\n            }, this.handleUpdateStatus(target))\r\n        }\r\n    }\r\n    /**\r\n     * Description: Details components click events to change\r\n     * depending on datatable row\r\n     * Author: Carlos Blanco\r\n     * Date: 9/24/2020\r\n     * Ticket: ET-351\r\n     * */\r\n    handleDynamicDetails = (target) => {\r\n        dtlsID = target \r\n    }           \r\n    dynamicDetails = (event) => {\r\n        event.preventDefault();\r\n        let target = event.target.id\r\n        if(target.length>0){\r\n            this.setState({\r\n                detailsId: target,\r\n                loadingDetails: true\r\n            }, this.handleDynamicDetails(target))\r\n        }else{\r\n            target = event.target.closest('div')\r\n            target = target.id\r\n            this.setState({\r\n                detailsId: target,\r\n                loadingDetails: true\r\n            },  this.handleDynamicDetails(target))\r\n        }\r\n    }\r\n    /**\r\n     * Description: Catch id from CTA component and pass\r\n     * to container state in order to set \r\n     * the new data for the datatable\r\n     * Author: Carlos Blanco\r\n     * Date: 9/7/2020\r\n     * Ticket: ET-249\r\n     * */\r\n    handleDynamicData = (target) => {\r\n        trgtID = target\r\n        console.log(trgtID)\r\n    }      \r\n    dynamicData = (event) => {\r\n        event.preventDefault();\r\n        let target = event.target.id\r\n        if(target.length>0){\r\n            this.setState({\r\n                targetId: target,\r\n                loading: true\r\n            }, this.handleDynamicData(target))\r\n        }else{\r\n            target = event.target.closest('div')\r\n            target = target.id\r\n            this.setState({\r\n                targetId: target,\r\n                loading: true\r\n            }, this.handleDynamicData(target))\r\n        }\r\n        \r\n    }\r\n\r\n    // sortByDate = (a, b) => {\r\n    //     a = new Date(a.createdAt)\r\n    //     b = new Date(b.createdAt)\r\n    //     return b - a\r\n    // }\r\n\r\n    // sortOrderNotesByDate = () => {\r\n    //     let data = notesdata.data;\r\n    //     let workOrderNotes = [];\r\n    //     let proposalNotes = [];\r\n    //     let invoiceNotes = [];\r\n    //     if(!!notesdata.data.workOrderNotes) {\r\n    //         workOrderNotes = notesdata.data.workOrderNotes.sort(this.sortByDate)\r\n    //         data = {...data, workOrderNotes: workOrderNotes}\r\n    //     }\r\n    //     if(!!notesdata.data.proposalNotes) {\r\n    //         proposalNotes = notesdata.data.proposalNotes.sort(this.sortByDate)\r\n    //         data = {...data, proposalNotes: proposalNotes}\r\n    //     }\r\n    //     if(!!notesdata.data.invoiceNotes) {\r\n    //         invoiceNotes = notesdata.data.invoiceNotes.sort(this.sortByDate);\r\n    //         data = {...data, invoiceNotes: invoiceNotes}\r\n    //     }\r\n    //     notesdata = {...notesdata, data}\r\n    // }\r\n    \r\n    async componentDidMount() {\r\n        token = await this.props.oauthFetchToken()\r\n        //userData = await this.props.fetchUsersInformation()\r\n        //console.log(userData.userdata.user)\r\n        //userId = userData.userdata.user.user_id     \r\n        //Next line it's to develop in local     \r\n        userId = \"2152\"\r\n        this.setState({ \r\n            firstLoading: true\r\n        })\r\n        ctadata = await this.props.fetchCTAsData()\r\n        tmpdata = await this.props.fetchEmergencyWOData()  \r\n        console.log(tmpdata)\r\n        if(tmpdata.data.work_orders!==undefined) {\r\n            dtlsID = tmpdata.data.work_orders[0]['workOrderId']\r\n            this.setState({\r\n                detailsId: dtlsID,\r\n            })\r\n        }\r\n        historydata = await this.props.fetchHistoryWOData()\r\n        detailsdata = await this.props.fetchDetailsWOData()\r\n        notesdata = await this.props.fetchNotesWOData()\r\n        // this.sortOrderNotesByDate()\r\n        warrantydata = await this.props.fetchWarrantyWOData()\r\n        attachmentsdata = await this.props.fetchAttachmentsWOData()\r\n        this.setState({ firstLoading: false })\r\n        trgtID = trgtID===undefined?this.state.targetId:trgtID\r\n    }\r\n\r\n    /**\r\n     * handleId() => loads data changes\r\n     * handleAsyncId() => call async functions since cannot be pass through setState as callback\r\n     * handleChangePrevState() => trigger setState \r\n     * \r\n     * Author: Carlos Blanco\r\n     * Date: 11/13/2020\r\n     * Ticket: ET-735\r\n     * */\r\n    handleId = async(id) => {\r\n        dtlsID = id\r\n        detailsdata = await this.props.fetchDetailsWOData(dtlsID, token)\r\n        notesdata = await this.props.fetchNotesWOData(dtlsID, token)\r\n        // this.sortOrderNotesByDate()\r\n        attachmentsdata = await this.props.fetchAttachmentsWOData(dtlsID, token)\r\n        historydata = await this.props.fetchHistoryWOData(dtlsID, token)\r\n        warrantydata = await this.props.fetchWarrantyWOData(dtlsID, token)                  \r\n    }\r\n\r\n    handleAsyncId = (id) => {\r\n        dtlsID = id\r\n        this.handleId(dtlsID)\r\n    }\r\n    //Change details data\r\n    handleChangePrevState = (id) => {\r\n        dtlsID = id     \r\n        this.setState({\r\n            detailsId: dtlsID,\r\n            loading: true\r\n        }, this.handleAsyncId(id))        \r\n    }\r\n    //move active item to the top of grid\r\n    // array_move = (arr, old_index, new_index) => {\r\n    //     if (new_index >= arr.length) {\r\n    //         let k = new_index - arr.length + 1;\r\n    //         while (k--) {\r\n    //             arr.push(undefined);\r\n    //         }\r\n    //     }\r\n    //     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    //     return arr;\r\n    // };\r\n    // isCurrent = (element) => element.workOrderId.toString() === this.state.detailsId.toString();\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        \r\n        const searchTermIn = this.state.searchTerm\r\n        const searchByIn = this.state.searchBy  \r\n        const filterByInByAssetType = this.state.filterByAssetType\r\n        const filterByInByStatus = this.state.filterByStatus\r\n        const filterByInByPriority = this.state.filterByPriority\r\n        if(\r\n            prevState.targetId !== this.state.targetId ||\r\n            prevState.detailsId !== this.state.detailsId ||\r\n            prevState.searchTerm !== this.state.searchTerm ||\r\n            prevState.searchBy !== this.state.searchBy ||\r\n            prevState.filterByAssetType !== this.state.filterByAssetType ||\r\n            prevState.filterByStatus !== this.state.filterByStatus ||\r\n            prevState.filterByPriority !== this.state.filterByPriority ||\r\n            prevState.newNoteAvailable !== this.state.newNoteAvailable ||\r\n            prevState.updatedStatus !== this.state.updatedStatus ||\r\n            prevState.reassignToAvailable !== this.state.reassignToAvailable\r\n        ) {\r\n            this.setState({loading: true})\r\n            //Clean input if lenght is 0\r\n            if(searchTermIn.length===0) {\r\n                this.setState({\r\n                    searchTerm: \"\",\r\n                })\r\n            }        \r\n            //Set data for DataTable Component\r\n            switch (this.state.targetId) {\r\n                case \"emergencyWO\":\r\n                    if(searchTermIn.length>3 && searchByIn<=1) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        if(filterByInByAssetType.length>0){\r\n                            let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                            dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                            if(filterByInByPriority.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                                })\r\n                            } else if(filterByInByStatus.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                                })                         \r\n                            }\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                            \r\n                        } else {\r\n                            let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                            console.log(dataSearched)\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            } \r\n                        }\r\n                    }else if(searchTermIn.length>3 && searchByIn>1){\r\n                        let tmp = await this.props.fetchSearchData()\r\n                        let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                             \r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                                                      \r\n                        } else if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }   \r\n                        } else {\r\n                            tmpdata = await this.props.fetchSearchData()\r\n                        }                        \r\n                    //Default filter by asset type without search                        \r\n                    }else if(filterByInByAssetType.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }\r\n                    //Default filter by status without search   \r\n                    }else if(filterByInByStatus.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }  \r\n                    //Default filter by priority without search   \r\n                    }else if(filterByInByPriority.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                              \r\n                    }else if(searchTermIn.length === 0) {\r\n                        tmpdata = await this.props.fetchEmergencyWOData()\r\n                    }                \r\n                    break; \r\n                case \"pendingWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchPendingWOData()\r\n                }                \r\n                break;                   \r\n                case \"assignedWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchAssignedToMeWOData()\r\n                }                \r\n                break; \r\n                case \"unassignedWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchUnassignedWOData()\r\n                }                \r\n                break;                                                       \r\n                default:\r\n                    tmpdata = await this.props.fetchEmergencyWOData()\r\n                    break;\r\n            }\r\n\r\n            const handleId = async(dtlsID) => {\r\n                detailsdata = await this.props.fetchDetailsWOData(dtlsID, token)\r\n                notesdata = await this.props.fetchNotesWOData(dtlsID, token)\r\n                // this.sortOrderNotesByDate()\r\n                attachmentsdata = await this.props.fetchAttachmentsWOData(dtlsID, token)\r\n                historydata = await this.props.fetchHistoryWOData(dtlsID, token)\r\n                warrantydata = await this.props.fetchWarrantyWOData(dtlsID, token)\r\n                this.setState({loadingDetails: false})\r\n            }\r\n            //Change details data\r\n            const handleChangePrevState = (dtlsID) => {\r\n                const id = dtlsID\r\n                handleId(id)\r\n            }\r\n\r\n            // let currentIndex =  tmpdata.data.work_orders.findIndex(this.isCurrent);\r\n            // if(currentIndex === -1) currentIndex = 0\r\n            // this.array_move(tmpdata.data.work_orders, currentIndex, 0)\r\n\r\n            const prevSteDtls = prevState.detailsId\r\n            const currentSteDtls = this.state.detailsId\r\n            const tmpDtls = tmpdata.data!==undefined?\r\n                                (tmpdata.data.work_orders!==null?\r\n                                    (tmpdata.data.work_orders[0]!==undefined?\r\n                                        tmpdata.data.work_orders[0]['workOrderId']:\r\n                                        dtlsID):dtlsID):\r\n                                        dtlsID\r\n            //Choose if details preview it's based on the first response element or the selected by the user when clicks the row\r\n            if( prevSteDtls !== ''){\r\n                if( prevSteDtls !== currentSteDtls ) {\r\n                    this.setState({\r\n                        detailsId: dtlsID,\r\n                        loadingDetails: true\r\n                    }, handleChangePrevState(dtlsID)) \r\n                } else {\r\n                    dtlsID = tmpDtls             \r\n                    this.setState({\r\n                        detailsId: dtlsID,\r\n                    }, handleChangePrevState(dtlsID))    \r\n                }\r\n            }\r\n            \r\n            const prevNoteStatus = prevState.newNoteAvailable\r\n            const currentNoteStatus = this.state.newNoteAvailable\r\n            if( prevNoteStatus !== currentNoteStatus) {\r\n                newNote = await this.props.createNoteWOData(noteDescription, dtlsID, token, userId)\r\n                this.setState({\r\n                    newNote: newNote.data,\r\n                    loadingDetails: true\r\n                }, handleChangePrevState(dtlsID))\r\n            }\r\n\r\n            const prevUpdatedStatus = prevState.updatedStatus\r\n            const currentUpdatedStatus = this.state.updatedStatus\r\n            if( prevUpdatedStatus !== currentUpdatedStatus) {\r\n                workOrderUpdateResponse = await this.props.updateWOStatus(dtlsID, token, updatedStatus, reassignToVal)\r\n                if(workOrderUpdateResponse) {\r\n                    this.setState({\r\n                        workOrderUpdateResponse: workOrderUpdateResponse,\r\n                        loadingDetails: true\r\n                    }, handleChangePrevState(dtlsID))\r\n                } else {\r\n                    alert(\"Server Error Occured\")\r\n                }\r\n            }\r\n\r\n            // console.log(\"dltsID\", this.state.deta)\r\n            //Normalize state to avoid missing data or state changes\r\n            this.setState({\r\n                detailsId: dtlsID,\r\n                targetId: this.state.targetId,\r\n                loading: false\r\n            }, handleChangePrevState(dtlsID)) \r\n            \r\n        }\r\n    }\r\n    render() {\r\n\r\n        const globalState = {\r\n            dynamicDetails: this.dynamicDetails,\r\n            dynamicData: this.dynamicData,\r\n            handleSearchTerm: this.handleSearchTerm,\r\n            handleSearchBy: this.handleSearchBy,\r\n            handleFilterByAssetType: this.handleFilterByAssetType,\r\n            handleFilterByStatus: this.handleFilterByStatus,\r\n            handleFilterByPriority: this.handleFilterByPriority,\r\n            handleFilterClearAll: this.handleFilterClearAll,\r\n            createNoteWOData: this.createNoteWOData,\r\n            updateWOStatus: this.updateWOStatus,\r\n            handleNoteInput: this.handleNoteInput,\r\n            handleReassignToSelect: this.handleReassignToSelect,\r\n            reassignToVal: this.state.reassignToVal,\r\n            currentDtlsId: this.state.detailsId,\r\n            noteDescription: this.state.noteDescription,\r\n            filterByStateAssetType: this.state.filterByAssetType,\r\n            filterByStateStatus: this.state.filterByStatus,\r\n            filterByStatePriority: this.state.filterByPriority,                        \r\n            searchByState: this.state.searchBy,\r\n            searchTermState: this.state.searchTerm,\r\n        }\r\n        return (\r\n            <GlobalContext.Provider value={globalState}>\r\n                <div className=\"work-orders-container\">\r\n                    <Alert severity=\"warning\" variant=\"filled\">\r\n                        <Link href=\"/admin/WorkOrders\" target=\"_blank\" rel=\"noopener\" color=\"inherit\">\r\n                            <i>Missing Something? Go to the Old Version</i>\r\n                        </Link>\r\n                    </Alert>\r\n                    <Grid className=\"cta-section-component\">\r\n                        <CTASectionComponent \r\n                            ctadata={ctadata}\r\n                            tmpdata={tmpdata} \r\n                        />\r\n                    </Grid>            \r\n                    <Grid container className=\"content-section\">\r\n                        <Grid item xs={12} md={7} lg={7}>\r\n                            <DataTableComponent\r\n                                tmpdata={tmpdata}\r\n                                loading={this.state.loading}\r\n                                firstLoading={this.state.firstLoading}\r\n                            />\r\n                        </Grid>        \r\n                        <Grid item xs={12} md={5} lg={5}>\r\n                            <WorkOrderDetailsComponent\r\n                                loadingDetails={this.state.loadingDetails}\r\n                                detailsdata={detailsdata}\r\n                                history={historydata} \r\n                                attachments={attachmentsdata} \r\n                                notes={notesdata}\r\n                                firstLoading={this.state.firstLoading}\r\n                                warranty={warrantydata}\r\n                            />\r\n                        </Grid>  \r\n                    </Grid>  \r\n                </div>   \r\n            </GlobalContext.Provider>                   \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    oauthFetchToken: () => dispatch(oauthFetchToken()),\r\n    fetchCTAsData: () => dispatch(fetchCTAsData(token, userId)),   \r\n    fetchSearchData: () => dispatch(fetchSearchData(searchTerm, searchBy, token, userId)),   \r\n    fetchWarrantyWOData: () => dispatch(fetchWarrantyWOData(dtlsID, token)),   \r\n    fetchPendingWOData: () => dispatch(fetchPendingWOData(token, userId)),\r\n    fetchEmergencyWOData: () => dispatch(fetchEmergencyWOData(token, userId)),\r\n    fetchUsersInformation: () => dispatch(fetchUsersInformation(token)),\r\n    fetchDetailsWOData: () => dispatch(fetchDetailsWOData(dtlsID, token)),\r\n    updateWOStatus: () => dispatch(updateWOStatus(dtlsID, token, updatedStatus, reassignToVal)),\r\n    fetchAssignedToMeWOData: () => dispatch(fetchAssignedToMeWOData(token, userId)),\r\n    fetchUnassignedWOData: () => dispatch(fetchUnassignedWOData(token, userId)),\r\n    fetchHistoryWOData: () => dispatch(fetchHistoryWOData(dtlsID, token)),\r\n    fetchNotesWOData: () => dispatch(fetchNotesWOData(dtlsID, token)),\r\n    createNoteWOData: () => dispatch(createNoteWOData(noteDescription, dtlsID, token, userId)),\r\n    fetchAttachmentsWOData: ()=> dispatch(fetchAttachmentsWOData(dtlsID, token)),\r\n})\r\n\r\n\r\nconst WorkOrdersContainer = connect(mapStateToProps, mapDispatchToProps)(WorkOrdersBuilder)\r\n\r\nexport default WorkOrdersContainer;","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\context\\globalcontext\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\oauthtokenreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\ctasectionreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\emergencyworkordersreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\useraccountdatareducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\pendingworkordersreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderunassignedreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderdetailsreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderassignedtomereducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workorderattachmentsreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workordershistoryreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\advancedsearchreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\warrantymodalreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\workordersnotesreducer\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\alertComponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\useraccountdataactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\emercencyworkordersactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\advancedsearchcomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\pendingworkordersactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\assignedtomeworkordersactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\unassignedworkordersactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderdetailsactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\advancedsearchactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderhistoryactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workorderattachmentsactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\workordernotesactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\warrantymodalactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\oauthtokenactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\actions\\ctasectionactions\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\constants\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\reducers\\initialstate\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\common\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\locationdetailslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbypriority\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbystatus\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbyassettype\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderprioritylayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderstatuslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rowbuilderlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderregularrowlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\reactwindowtablelayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendermultiitemlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderimagelayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\tablecolumnslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendersingleitemlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\boxeddetailslayout\\index.js",["433"],"//Basic imports\r\nimport React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        fontSize: \"14px\",\r\n        lineHeight: \"25px\"\r\n    },\r\n    etaSection: {\r\n        border: \"1px solid #cccccc\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\"\r\n    },  \r\n    date: {\r\n        fontWeight: 600,\r\n        color: \"#F20050\",\r\n    }  \r\n}));\r\n\r\nexport const BoxedDetails = ({proposalId, invoiceId, currentEta, serviceProvider, serviceProviderLast, proposalStatus, invoiceStatus, nullVal}) => {\r\n    const api_url = '/admin/';\r\n    const classes = useStyles()\r\n    const smallSize = 12\r\n    const mediumSize = 6\r\n    const unixtest = currentEta!==null?currentEta:nullVal\r\n    const testing = Date.parse(unixtest)\r\n    //console.log(testing)\r\n    return (\r\n        <Grid item xs={smallSize} md={12} lg={7} className={classes.etaSection}>\r\n            <Grid container>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><strong>Current ETA: </strong></Typography>\r\n                </Grid>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><span className={classes.date}><Moment format=\"MMMM D, YYYY hh:mm a\">{currentEta!==null?currentEta:nullVal}</Moment></span></Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><strong>Service Provider: </strong></Typography>\r\n                </Grid>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}>{serviceProvider!==null?serviceProvider:nullVal} {serviceProviderLast!==null?serviceProviderLast:nullVal}</Typography>\r\n                </Grid>\r\n            </Grid>            \r\n            <Grid container>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><strong>Assigned To: </strong></Typography>\r\n                </Grid>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}>N/A</Typography>\r\n                </Grid>\r\n            </Grid>     \r\n            <Grid container>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><strong>Proposal Status: </strong></Typography>                    \r\n                </Grid>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Link href={`${api_url}Proposals/proposal_details/${proposalId}`}>\r\n                        <Typography className={classes.text}>{proposalStatus!==null?proposalStatus:nullVal}</Typography>\r\n                    </Link>\r\n                </Grid>               \r\n            </Grid>                    \r\n            <Grid container>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Typography className={classes.text}><strong>Invoice Status: </strong></Typography>                    \r\n                </Grid>\r\n                <Grid item xs={smallSize} md={mediumSize}>\r\n                    <Link href={`${api_url}Invoices/details/${invoiceId}`}>\r\n                        <Typography className={classes.text}>{invoiceStatus!==null?invoiceStatus:nullVal}</Typography>\r\n                    </Link>\r\n                </Grid>                              \r\n            </Grid>             \r\n        </Grid>\r\n    )\r\n}","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\enhanceddetailslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\workorderdesriptionclayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\maindetailslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailsimagelayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\mainactionslayout\\index.js",["434"],"//Basic imports\r\nimport React, {useContext} from 'react';\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Select, MenuItem } from '@material-ui/core'\r\n\r\nimport { GlobalContext } from \"../../../../context/globalcontext\";\r\nimport PopupComponent from '../../../popupcomponent'\r\n//Icons\r\nimport {\r\n    AddNote,\r\n    NotFixed,\r\n    ReAssigned,\r\n    // Complete,\r\n    Cancel\r\n} from '../../../../assets/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    actionButton:{\r\n        color: \"#FFFFFF\",\r\n        backgroundColor: '#0072CE',\r\n        fontWeight: 'bold',\r\n        width: '140px',\r\n        maxWidth: '150px',\r\n        // minWidth: '150px',\r\n        height: '32px',\r\n        float: 'right',\r\n        fontSize: '13px',\r\n        margin: '5px',\r\n        borderRadius: '16px !important',\r\n        '&:hover': {\r\n            backgroundColor: '#54A6DA',\r\n            borderColor: '#0072CE',\r\n            boxShadow: 'none',\r\n        }\r\n\r\n    },\r\n    actionButtonOutlned:{\r\n        color: \"#0072CE\",\r\n        border: '2px solid #0072CE',\r\n        fontWeight: 'bold',\r\n        width: '140px',\r\n        maxWidth: '150px',\r\n        // minWidth: '150px',\r\n        height: '32px',\r\n        float: 'right',\r\n        fontSize: '13px',\r\n        margin: '5px',\r\n        borderRadius: '16px !important',\r\n        '&:hover': {\r\n            backgroundColor: '#0072CE',\r\n            color: \"#FFFFFF\",\r\n            borderColor: '#0072CE',\r\n            boxShadow: 'none',\r\n        }\r\n\r\n    },\r\n    MuiDialogTitle: {\r\n        root: {\r\n            color: 'blue'\r\n        }\r\n    },\r\n    inputLabel: {\r\n        margin: '20px'\r\n    },\r\n    textField: {\r\n        minHeight: 200 \r\n    },\r\n    reassignForm: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        margin: '20px 0px',\r\n        alignItems: 'center'\r\n    },\r\n    reassignSelect: {\r\n        flex: '1',\r\n        marginTop: 'unset !important',\r\n    }\r\n}));\r\n\r\nconst serviceProviders = [\r\n    \"NUCO2 Beer Blast System, call direct@ 800-472-2855 ext. 3028\",\r\n    \"General Parts Corporate Dispatch\",\r\n    \"Reddi Industries\"\r\n]\r\n\r\nexport const MainActions = () => {\r\n    const noteFunc = useContext(GlobalContext)\r\n    const addNote = noteFunc.createNoteWOData\r\n    const chageInputNote = noteFunc.handleNoteInput\r\n    let noteDescription = noteFunc.noteDescription\r\n    const error = noteDescription === '' || noteDescription.length > 1000;\r\n    const updateWOStatus = noteFunc.updateWOStatus\r\n    const reassignedTo = noteFunc.handleReassignToSelect\r\n    const reassignToVal = noteFunc.reassignToVal\r\n    console.log('reassignToVal', reassignToVal)\r\n\r\n    const classes = useStyles()\r\n    const addNoteContent = <div>\r\n                                <FormControl required error={error} component=\"fieldset\" style={{width:'100%'}}>\r\n                                    <FormLabel className={classes.inputLabel} component=\"legend\">Note(1,000 character max)</FormLabel>\r\n                                    <TextField onChange={chageInputNote} fullWidth={true} multiline={true} variant=\"outlined\" InputProps={{ classes: { input: classes.textField } }}/>\r\n                                </FormControl>\r\n                                <FormControl required>\r\n                                </FormControl>\r\n                            </div>\r\n    const reassignContent = <div>\r\n                        <FormControl component=\"fieldset\" variant=\"outlined\" className={classes.reassignForm} style={{width: '100%', display:'flex'}}>\r\n                            <FormLabel className={classes.inputLabel}>Select Service Provider:</FormLabel>\r\n                            <Select\r\n                                labelId=\"assigned-to-label\"\r\n                                id=\"assigned-to-label\"\r\n                                className={classes.reassignSelect}\r\n                                onChange={reassignedTo}\r\n                                value={reassignToVal}\r\n                                MenuProps = {{\r\n                                    anchorOrigin: { vertical: \"bottom\", horizontal: \"left\" },\r\n                                    transformOrigin: { vertical: \"top\",horizontal: \"left\" },\r\n                                    getContentAnchorEl: null\r\n                                }}\r\n                            >\r\n                                <MenuItem \r\n                                    value={1}\r\n                                    disabled\r\n                                >Service Providers</MenuItem>\r\n                                {serviceProviders.map((item, index) => {\r\n                                    return (\r\n                                        <MenuItem \r\n                                            key={index}\r\n                                            value={item}\r\n                                        >{item}</MenuItem>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                     </div>\r\n    console.log('reassignToVal', reassignToVal)\r\n    return (\r\n        <Grid item xs={12} md={12} lg={4} className=\"action-button-grid\">\r\n            <PopupComponent buttonLabel=\"ADD NOTE\" modalTitle=\"Add Notes\" btn2Classes={`${classes.actionButton} action-button`} btnClasses={`${classes.actionButton} action-button`} btn1Classes={`${classes.actionButtonOutlned} action-button`} btnStartIcon={<AddNote/>} btn1Label=\"Cancel\" btn2Func={addNote} btn2Label=\"Submit\" MuiDialogTitle={classes.MuiDialogTitle} content={addNoteContent} />\r\n            <PopupComponent buttonLabel=\"Not Fixed\" modalTitle=\"Not Fixed\" btnClasses={`${classes.actionButton} action-button`} btn2Classes={`${classes.actionButton} action-button`} btn1Classes={`${classes.actionButton} action-button`} btnStartIcon={<NotFixed/>} btn1Func={updateWOStatus} MuiDialogTitle={classes.MuiDialogTitle} content=\"Not fixed?\" />\r\n            <PopupComponent buttonLabel=\"Reassign\" modalTitle=\"Reassign\" reassignToVal={reassignToVal} btnClasses={`${classes.actionButton} action-button`} btn2Classes={`${classes.actionButton} action-button`} btn1Classes={`${classes.actionButton} action-button`} btnStartIcon={<ReAssigned/>} btn1Label=\"Reassign\" btn1Func={updateWOStatus} btn2Label=\"Cancel\" MuiDialogTitle={classes.MuiDialogTitle} content={reassignContent} />\r\n            {/* <PopupComponent buttonLabel=\"Complete\" modalTitle=\"Complete\" btnClasses={`${classes.actionButton} action-button`} btn2Classes={`${classes.actionButton} action-button`} btn1Classes={`${classes.actionButton} action-button`} btnStartIcon={<Complete/>} btn1Func={updateWOStatus} MuiDialogTitle={classes.MuiDialogTitle} content=\"Complete?\" /> */}\r\n            <PopupComponent buttonLabel=\"Cancel\" modalTitle=\"Cancel\" btnClasses={`${classes.actionButton} action-button`} btn2Classes={`${classes.actionButton} action-button`} btn1Classes={`${classes.actionButton} action-button`} btnStartIcon={<Cancel/>} btn1Func={updateWOStatus} MuiDialogTitle={classes.MuiDialogTitle} content=\"Cancel?\" />\r\n        </Grid>\r\n    )\r\n}","E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\linkactionslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\getmodalstyle\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\featuredctalayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\ctasectionlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernotnull\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernull\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\itemkeyhelper\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\createitemdatahelper\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\popupcomponent\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\reactwindowtablelayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\tablecolumnslayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\constants\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rowbuilderlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\renderdateitemlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendersingleitemlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendermultiitemlayout\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\datatablecomponent\\constants\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\add-note.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\not-fixed.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\reassigned.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\cancel.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\assets\\icons\\complete.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\itemkeyhelper\\index.js",[],"E:\\JohnsWork\\lp-work-order\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\createitemdatahelper\\index.js",[],{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","replacedBy":"438"},{"ruleId":"439","severity":1,"message":"440","line":46,"column":5,"nodeType":"441","messageId":"442","endLine":46,"endColumn":13},{"ruleId":"439","severity":1,"message":"443","line":32,"column":11,"nodeType":"441","messageId":"442","endLine":32,"endColumn":18},{"ruleId":"439","severity":1,"message":"444","line":7,"column":8,"nodeType":"441","messageId":"442","endLine":7,"endColumn":14},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"no-unused-vars","'userData' is defined but never used.","Identifier","unusedVar","'testing' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]