[{"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\index.js":"1","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\App.js":"2","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\serviceWorker.js":"3","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\index.js":"4","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\store\\index.js":"5","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\bold.js":"6","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\light.js":"7","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\semibold.js":"8","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\heavy.js":"9","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\medium.js":"10","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\api\\index.js":"11","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\containers\\workorderscontainer\\index.js":"12","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\index.js":"13","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\index.js":"14","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\faker\\index.js":"15","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\index.js":"16","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\context\\globalcontext\\index.js":"17","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\oauthtokenreducer\\index.js":"18","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\useraccountdatareducer\\index.js":"19","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\ctasectionreducer\\index.js":"20","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\emergencyworkordersreducer\\index.js":"21","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderassignedtomereducer\\index.js":"22","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderunassignedreducer\\index.js":"23","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\pendingworkordersreducer\\index.js":"24","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workordersnotesreducer\\index.js":"25","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderdetailsreducer\\index.js":"26","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderattachmentsreducer\\index.js":"27","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workordershistoryreducer\\index.js":"28","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\warrantymodalreducer\\index.js":"29","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\advancedsearchreducer\\index.js":"30","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\faker\\ctasectionactions\\index.js":"31","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\oauthtokenactions\\index.js":"32","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\warrantymodalactions\\index.js":"33","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workordernotesactions\\index.js":"34","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderhistoryactions\\index.js":"35","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderattachmentsactions\\index.js":"36","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\advancedsearchactions\\index.js":"37","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderdetailsactions\\index.js":"38","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\constants\\index.js":"39","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\assignedtomeworkordersactions\\index.js":"40","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\openworkordersactions\\index.js":"41","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\pendingworkordersactions\\index.js":"42","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\unassignedworkordersactions\\index.js":"43","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\ctasectionactions\\index.js":"44","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\emercencyworkordersactions\\index.js":"45","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\useraccountdataactions\\index.js":"46","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\index.js":"47","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\alertComponent\\index.js":"48","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\advancedsearchcomponent\\index.js":"49","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\index.js":"50","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\index.js":"51","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\index.js":"52","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\index.js":"53","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\index.js":"54","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\initialstate\\index.js":"55","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\index.js":"56","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\index.js":"57","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\index.js":"58","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\common\\index.js":"59","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\index.js":"60","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\index.js":"61","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbypriority\\index.js":"62","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\locationdetailslayout\\index.js":"63","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\index.js":"64","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderprioritylayout\\index.js":"65","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderregularrowlayout\\index.js":"66","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rowbuilderlayout\\index.js":"67","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderstatuslayout\\index.js":"68","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\reactwindowtablelayout\\index.js":"69","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\tablecolumnslayout\\index.js":"70","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderimagelayout\\index.js":"71","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendersingleitemlayout\\index.js":"72","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendermultiitemlayout\\index.js":"73","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\boxeddetailslayout\\index.js":"74","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\enhanceddetailslayout\\index.js":"75","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\ctasectionlayout\\index.js":"76","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\featuredctalayout\\index.js":"77","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\workorderdesriptionclayout\\index.js":"78","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\linkactionslayout\\index.js":"79","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\maindetailslayout\\index.js":"80","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\mainactionslayout\\index.js":"81","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailslayout\\index.js":"82","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\getmodalstyle\\index.js":"83","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbystatus\\index.js":"84","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailsimagelayout\\index.js":"85","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbyassettype\\index.js":"86","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernull\\index.js":"87","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernotnull\\index.js":"88","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rowbuilderlayout\\index.js":"89","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\reactwindowtablelayout\\index.js":"90","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\tablecolumnslayout\\index.js":"91","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\index.js":"92","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\constants\\index.js":"93","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\renderdateitemlayout\\index.js":"94","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendersingleitemlayout\\index.js":"95","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendermultiitemlayout\\index.js":"96","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\popupcomponent\\index.js":"97","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\index.js":"98","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\constants\\index.js":"99","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\cancel.js":"100","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\reassigned.js":"101","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\complete.js":"102","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\not-fixed.js":"103","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\add-note.js":"104","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\createitemdatahelper\\index.js":"105","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\itemkeyhelper\\index.js":"106","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\index.js":"107","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\itemkeyhelper\\index.js":"108","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\createitemdatahelper\\index.js":"109"},{"size":1342,"mtime":1610160560966,"results":"110","hashOfConfig":"111"},{"size":2817,"mtime":1610176333628,"results":"112","hashOfConfig":"111"},{"size":5227,"mtime":1610160560996,"results":"113","hashOfConfig":"111"},{"size":1780,"mtime":1610160560720,"results":"114","hashOfConfig":"111"},{"size":1429,"mtime":1610160561000,"results":"115","hashOfConfig":"111"},{"size":156083,"mtime":1610160560715,"results":"116","hashOfConfig":"111"},{"size":153363,"mtime":1610160560725,"results":"117","hashOfConfig":"111"},{"size":156918,"mtime":1610160560734,"results":"118","hashOfConfig":"111"},{"size":159783,"mtime":1610160560719,"results":"119","hashOfConfig":"111"},{"size":155416,"mtime":1610160560729,"results":"120","hashOfConfig":"111"},{"size":1440,"mtime":1610160560708,"results":"121","hashOfConfig":"111"},{"size":68061,"mtime":1610176373501,"results":"122","hashOfConfig":"111"},{"size":1380,"mtime":1610160560974,"results":"123","hashOfConfig":"111"},{"size":941,"mtime":1610160560856,"results":"124","hashOfConfig":"111"},{"size":100,"mtime":1610160560960,"results":"125","hashOfConfig":"111"},{"size":1716,"mtime":1610160560686,"results":"126","hashOfConfig":"111"},{"size":89,"mtime":1610160560957,"results":"127","hashOfConfig":"111"},{"size":517,"mtime":1610160560978,"results":"128","hashOfConfig":"111"},{"size":543,"mtime":1610160560982,"results":"129","hashOfConfig":"111"},{"size":530,"mtime":1610160560972,"results":"130","hashOfConfig":"111"},{"size":545,"mtime":1610160560973,"results":"131","hashOfConfig":"111"},{"size":544,"mtime":1610160560986,"results":"132","hashOfConfig":"111"},{"size":541,"mtime":1610160560994,"results":"133","hashOfConfig":"111"},{"size":539,"mtime":1610160560980,"results":"134","hashOfConfig":"111"},{"size":649,"mtime":1610160560993,"results":"135","hashOfConfig":"111"},{"size":866,"mtime":1610160560989,"results":"136","hashOfConfig":"111"},{"size":552,"mtime":1610160560988,"results":"137","hashOfConfig":"111"},{"size":540,"mtime":1610160560991,"results":"138","hashOfConfig":"111"},{"size":533,"mtime":1610160560984,"results":"139","hashOfConfig":"111"},{"size":554,"mtime":1610160560970,"results":"140","hashOfConfig":"111"},{"size":234,"mtime":1610160560959,"results":"141","hashOfConfig":"111"},{"size":810,"mtime":1610160560688,"results":"142","hashOfConfig":"111"},{"size":1264,"mtime":1610160560699,"results":"143","hashOfConfig":"111"},{"size":2074,"mtime":1610160560707,"results":"144","hashOfConfig":"111"},{"size":1047,"mtime":1610160560705,"results":"145","hashOfConfig":"111"},{"size":1084,"mtime":1610160560701,"results":"146","hashOfConfig":"111"},{"size":2062,"mtime":1610160560679,"results":"147","hashOfConfig":"111"},{"size":3092,"mtime":1610160560703,"results":"148","hashOfConfig":"111"},{"size":1754,"mtime":1610160560950,"results":"149","hashOfConfig":"111"},{"size":1101,"mtime":1610160560681,"results":"150","hashOfConfig":"111"},{"size":1018,"mtime":1610160560690,"results":"151","hashOfConfig":"111"},{"size":1066,"mtime":1610160560692,"results":"152","hashOfConfig":"111"},{"size":1076,"mtime":1610160560695,"results":"153","hashOfConfig":"111"},{"size":1052,"mtime":1610160560683,"results":"154","hashOfConfig":"111"},{"size":1096,"mtime":1610160560685,"results":"155","hashOfConfig":"111"},{"size":553,"mtime":1610160560697,"results":"156","hashOfConfig":"111"},{"size":10496,"mtime":1610160560854,"results":"157","hashOfConfig":"111"},{"size":938,"mtime":1610160560761,"results":"158","hashOfConfig":"111"},{"size":5061,"mtime":1610160560759,"results":"159","hashOfConfig":"111"},{"size":15576,"mtime":1610160560862,"results":"160","hashOfConfig":"111"},{"size":4018,"mtime":1610160560877,"results":"161","hashOfConfig":"111"},{"size":1990,"mtime":1610160560924,"results":"162","hashOfConfig":"111"},{"size":2909,"mtime":1610160560778,"results":"163","hashOfConfig":"111"},{"size":2217,"mtime":1610160560764,"results":"164","hashOfConfig":"111"},{"size":187,"mtime":1610160560975,"results":"165","hashOfConfig":"111"},{"size":237,"mtime":1610160560853,"results":"166","hashOfConfig":"111"},{"size":79,"mtime":1610160560860,"results":"167","hashOfConfig":"111"},{"size":926,"mtime":1610160560937,"results":"168","hashOfConfig":"111"},{"size":5196,"mtime":1610160560868,"results":"169","hashOfConfig":"111"},{"size":1987,"mtime":1610160560781,"results":"170","hashOfConfig":"111"},{"size":167,"mtime":1610160560769,"results":"171","hashOfConfig":"111"},{"size":772,"mtime":1610160560849,"results":"172","hashOfConfig":"111"},{"size":1362,"mtime":1610160560941,"results":"173","hashOfConfig":"111"},{"size":493,"mtime":1610160560880,"results":"174","hashOfConfig":"111"},{"size":4865,"mtime":1610160560790,"results":"175","hashOfConfig":"111"},{"size":488,"mtime":1610160560794,"results":"176","hashOfConfig":"111"},{"size":3273,"mtime":1610160560800,"results":"177","hashOfConfig":"111"},{"size":6581,"mtime":1610160560798,"results":"178","hashOfConfig":"111"},{"size":3486,"mtime":1610160560784,"results":"179","hashOfConfig":"111"},{"size":1203,"mtime":1610160560802,"results":"180","hashOfConfig":"111"},{"size":1492,"mtime":1610160560786,"results":"181","hashOfConfig":"111"},{"size":7581,"mtime":1610160560797,"results":"182","hashOfConfig":"111"},{"size":1462,"mtime":1610160560788,"results":"183","hashOfConfig":"111"},{"size":3812,"mtime":1610172524388,"results":"184","hashOfConfig":"111"},{"size":7881,"mtime":1610160560935,"results":"185","hashOfConfig":"111"},{"size":2418,"mtime":1610160560767,"results":"186","hashOfConfig":"111"},{"size":1953,"mtime":1610160560768,"results":"187","hashOfConfig":"111"},{"size":1435,"mtime":1610160560947,"results":"188","hashOfConfig":"111"},{"size":2881,"mtime":1610160560939,"results":"189","hashOfConfig":"111"},{"size":1913,"mtime":1610160560945,"results":"190","hashOfConfig":"111"},{"size":7889,"mtime":1610160560943,"results":"191","hashOfConfig":"111"},{"size":777,"mtime":1610160560932,"results":"192","hashOfConfig":"111"},{"size":210,"mtime":1610160560859,"results":"193","hashOfConfig":"111"},{"size":766,"mtime":1610160560852,"results":"194","hashOfConfig":"111"},{"size":992,"mtime":1610160560928,"results":"195","hashOfConfig":"111"},{"size":748,"mtime":1610160560847,"results":"196","hashOfConfig":"111"},{"size":449,"mtime":1610160560923,"results":"197","hashOfConfig":"111"},{"size":9119,"mtime":1610172524376,"results":"198","hashOfConfig":"111"},{"size":4964,"mtime":1610160560914,"results":"199","hashOfConfig":"111"},{"size":2860,"mtime":1610160560882,"results":"200","hashOfConfig":"111"},{"size":1512,"mtime":1610160560917,"results":"201","hashOfConfig":"111"},{"size":144,"mtime":1610160560775,"results":"202","hashOfConfig":"111"},{"size":429,"mtime":1610160560771,"results":"203","hashOfConfig":"111"},{"size":638,"mtime":1610160560885,"results":"204","hashOfConfig":"111"},{"size":1121,"mtime":1610160560910,"results":"205","hashOfConfig":"111"},{"size":2147,"mtime":1610160560908,"results":"206","hashOfConfig":"111"},{"size":3492,"mtime":1610160560865,"results":"207","hashOfConfig":"111"},{"size":277,"mtime":1610160560739,"results":"208","hashOfConfig":"111"},{"size":429,"mtime":1610160560919,"results":"209","hashOfConfig":"111"},{"size":145,"mtime":1610160560737,"results":"210","hashOfConfig":"111"},{"size":153,"mtime":1610160560741,"results":"211","hashOfConfig":"111"},{"size":149,"mtime":1610160560738,"results":"212","hashOfConfig":"111"},{"size":150,"mtime":1610160560740,"results":"213","hashOfConfig":"111"},{"size":148,"mtime":1610160560736,"results":"214","hashOfConfig":"111"},{"size":225,"mtime":1610160560775,"results":"215","hashOfConfig":"111"},{"size":228,"mtime":1610160560777,"results":"216","hashOfConfig":"111"},{"size":144,"mtime":1610160560874,"results":"217","hashOfConfig":"111"},{"size":597,"mtime":1610160560876,"results":"218","hashOfConfig":"111"},{"size":225,"mtime":1610160560873,"results":"219","hashOfConfig":"111"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gnnwqz",{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\App.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\serviceWorker.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\store\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\bold.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\light.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\semibold.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\heavy.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\fonts\\medium.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\api\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\containers\\workorderscontainer\\index.js",["440","441"],"//Basic imports\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n//Components\r\nimport { \r\n    CTASectionComponent, \r\n    DataTableComponent, \r\n    WorkOrderDetailsComponent,\r\n    Alert, \r\n} from '../../components'\r\n\r\n//Material UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n//Actions\r\nimport { \r\n    oauthFetchToken,\r\n    fetchUsersInformation,\r\n    fetchCTAsData, \r\n    fetchSearchData,\r\n    fetchEmergencyWOData, \r\n    fetchOpenWOData, \r\n    fetchPendingWOData, \r\n    fetchDetailsWOData,\r\n    fetchAssignedToMeWOData,\r\n    fetchUnassignedWOData,\r\n    fetchHistoryWOData,\r\n    fetchNotesWOData,\r\n    fetchAttachmentsWOData,\r\n    fetchWarrantyWOData,\r\n    createNoteWOData,\r\n    updateWOStatus,\r\n    fetchServiceProviders,\r\n} from '../../actions';\r\n\r\n//Json Server API\r\n//To start the api server => json-server db.json --routes routes.json (Server running on localhost:3000)\r\n//Then run npm start / yarn start (Server running on localhost:3001)\r\n\r\nimport {\r\n    fetchCTAsDataTEST,\r\n} from '../../faker'\r\n\r\n//Context\r\nimport { GlobalContext } from '../../context/globalcontext'\r\n\r\n\r\n//Declaring global variables\r\n//Token\r\nlet token\r\n//User ID\r\nlet userId\r\nlet userData\r\n//CTA component\r\nlet ctadata\r\n//Datatable component\r\nlet tmpdata\r\n//Details component\r\nlet detailsdata\r\n//Tab component\r\nlet historydata\r\nlet notesdata\r\nlet attachmentsdata\r\nlet dtlsID\r\nlet trgtID\r\n//Search\r\nlet searchTerm\r\nlet searchBy\r\n//Warranty\r\nlet warrantydata\r\n//Filter\r\nlet filterByAssetType\r\nlet filterByStatus\r\nlet filterByPriority\r\n\r\nlet newNote\r\nlet newNoteAvailable\r\nlet noteDescription\r\n\r\nlet workOrderUpdateResponse\r\nlet updatedStatus\r\nlet reassignToVal\r\nlet serviceProviders\r\n\r\nclass WorkOrdersBuilder extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            targetId: \"emergencyWO\",\r\n            detailsId: \"\",\r\n            loading: false,\r\n            loadingDetails: false,\r\n            loadingAll: false,\r\n            searchTerm: \"\", \r\n            searchBy: 1,\r\n            filterByAssetType: 1,\r\n            filterByStatus: 1,\r\n            filterByPriority: 1,\r\n            newNote: '',\r\n            newNoteAvailable: false,\r\n            noteDescription: '',\r\n            workOrderUpdateResponse: '',\r\n            updatedStatus: '',\r\n            reassignToVal: 1,\r\n            reassignToAvailable: false,\r\n            itsActive: false\r\n        };\r\n    }    \r\n    handleChangeStateSearchTerm = (value) => {\r\n        searchTerm = value     \r\n    }\r\n    handleSearchTerm = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            searchTerm: value,\r\n        }, this.handleChangeStateSearchTerm(value));\r\n    } \r\n    handleChangeStateSearchBy = (value) => {\r\n        searchBy = value  \r\n    }    \r\n    handleSearchBy = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            searchBy: value\r\n        }, this.handleChangeStateSearchBy(value));\r\n    }\r\n    handleChangeStateFilterByAssetType = (value) => {\r\n        filterByAssetType = value       \r\n        console.log(filterByAssetType)\r\n    }    \r\n    handleFilterByAssetType = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByAssetType: value,\r\n        }, this.handleChangeStateFilterByAssetType(value))\r\n    } \r\n    handleChangeStateFilterByStatus = (value) => {\r\n        filterByStatus = value \r\n        console.log(filterByStatus)\r\n    }    \r\n    handleFilterByStatus = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByStatus: value,\r\n        }, this.handleChangeStateFilterByStatus(value))        \r\n    } \r\n    handleChangeStateFilterByPriority = (value) => {\r\n        filterByPriority = value       \r\n        console.log(filterByPriority)\r\n    }    \r\n    handleFilterByPriority = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            filterByPriority: value,\r\n        }, this.handleChangeStateFilterByPriority(value))        \r\n    }\r\n\r\n    handleChangeStateFilterClearAll = () => {\r\n        filterByPriority = 1;\r\n        filterByStatus = 1;\r\n        filterByAssetType = 1; \r\n    }\r\n\r\n    handleFilterClearAll = (event) => {\r\n        this.setState({\r\n            filterByAssetType: 1,\r\n            filterByStatus: 1,\r\n            filterByPriority: 1,\r\n        }, this.handleChangeStateFilterClearAll()) \r\n    }\r\n\r\n    handleChangeNoteInput = (value) => {\r\n        noteDescription = value;\r\n        console.log(\"description\", noteDescription)\r\n    }\r\n    handleNoteInput = (event) => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            noteDescription: value\r\n        }, this.handleChangeNoteInput(value))\r\n    }\r\n\r\n    handleAddNote = (isAvailable) => {\r\n        newNoteAvailable = isAvailable\r\n        console.log(newNoteAvailable)\r\n    }\r\n    createNoteWOData = (event) => {\r\n        this.setState({\r\n            newNoteAvailable: !newNoteAvailable,\r\n            loadingDetails: true\r\n        }, this.handleAddNote(!newNoteAvailable))\r\n    }\r\n\r\n    handleChangeReassignToSelect = (value) => {\r\n        reassignToVal = value\r\n        //console.log('reassignToVal', reassignToVal)\r\n    }\r\n    handleReassignToSelect = (event) => {\r\n        console.log(\"id\", event.target)\r\n        let value = event.target.value\r\n        this.setState({\r\n            reassignToVal: value\r\n        }, this.handleChangeReassignToSelect(value))\r\n    }\r\n\r\n    handleUpdateStatus = (target) => {\r\n        if(target === \"CANCEL\"){\r\n            updatedStatus = \"CANCELLED\"\r\n        } else {\r\n            updatedStatus = target\r\n        }\r\n        console.log(\"updatedStatus\", updatedStatus)\r\n    }\r\n    updateWOStatus = (event) => {\r\n        let target = event.target.parentElement.getAttribute(\"status\")\r\n        if(target !== 'Reassign') {\r\n            target = target.toUpperCase().replace(' ', '_')\r\n            this.setState({\r\n                updatedStatus: target,\r\n                loadingDetails: true,\r\n            }, this.handleUpdateStatus(target))\r\n        } else {\r\n            target = target.toUpperCase().replace(' ', '_')\r\n            this.setState({\r\n                updatedStatus: target,\r\n                reassignToAvailable: !this.state.reassignToAvailable,\r\n                loadingDetails: true,\r\n            }, this.handleUpdateStatus(target))\r\n        }\r\n    }\r\n    handleDynamicDetails = (target) => {\r\n        dtlsID = target \r\n    }           \r\n    dynamicDetails = (event) => {\r\n        event.preventDefault();\r\n        let target = event.target.id\r\n        if(target.length>0){\r\n            this.setState({\r\n                detailsId: target,\r\n                loadingDetails: true\r\n            }, this.handleDynamicDetails(target))\r\n        }else{\r\n            target = event.target.closest('div')\r\n            target = target.id\r\n            this.setState({\r\n                detailsId: target,\r\n                loadingDetails: true\r\n            },  this.handleDynamicDetails(target))\r\n        }\r\n    }\r\n    handleDynamicData = (target) => {\r\n        trgtID = target\r\n    }      \r\n    dynamicData = (event) => {\r\n        event.preventDefault();\r\n        let target = event.target.id\r\n        if(target.length>0){\r\n            this.setState({\r\n                targetId: target,\r\n                // loading: true\r\n            }, this.handleDynamicData(target))\r\n        }else{\r\n            target = event.target.closest('div')\r\n            target = target.id\r\n            this.setState({\r\n                targetId: target,\r\n                // loading: true\r\n            }, this.handleDynamicData(target))\r\n        }\r\n        \r\n    }\r\n    sortWOByCreatedDate = (data) => {\r\n        data.sort((a, b) => b.workOrderId-a.workOrderId);\r\n        data.sort((a, b) => b.dateCreated-a.dateCreated);\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        token = await this.props.oauthFetchToken()\r\n        /*\r\n        userData = await this.props.fetchUsersInformation()\r\n        console.log(userData.userdata.user)\r\n        userId = userData.userdata.user.user_id   \r\n        */\r\n        //Next line it's to develop in local     \r\n        userId = \"2152\"\r\n        this.setState({ \r\n            firstLoading: true\r\n        })\r\n        ctadata = await this.props.fetchCTAsData()\r\n\r\n        tmpdata = await this.props.fetchEmergencyWOData()  \r\n        if(tmpdata.data.work_orders!==undefined) {\r\n            dtlsID = tmpdata.data.work_orders[0]['workOrderId']\r\n            this.setState({\r\n                detailsId: dtlsID,\r\n            })\r\n        }\r\n        historydata = await this.props.fetchHistoryWOData()\r\n        detailsdata = await this.props.fetchDetailsWOData()\r\n        notesdata = await this.props.fetchNotesWOData()\r\n        serviceProviders = await this.props.fetchServiceProviders();\r\n        // this.sortOrderNotesByDate()\r\n        warrantydata = await this.props.fetchWarrantyWOData()\r\n        attachmentsdata = await this.props.fetchAttachmentsWOData()\r\n        this.setState({ firstLoading: false })\r\n        trgtID = trgtID===undefined?this.state.targetId:trgtID\r\n    }\r\n\r\n    /**\r\n     * handleId() => loads data changes\r\n     * handleAsyncId() => call async functions since cannot be pass through setState as callback\r\n     * handleChangePrevState() => trigger setState \r\n     * \r\n     * Author: Carlos Blanco\r\n     * Date: 11/13/2020\r\n     * Ticket: ET-735\r\n     * */\r\n    handleId = async(id) => {\r\n        dtlsID = id\r\n        detailsdata = await this.props.fetchDetailsWOData(dtlsID, token)\r\n        notesdata = await this.props.fetchNotesWOData(dtlsID, token)\r\n        // this.sortOrderNotesByDate()\r\n        attachmentsdata = await this.props.fetchAttachmentsWOData(dtlsID, token)\r\n        historydata = await this.props.fetchHistoryWOData(dtlsID, token)\r\n        warrantydata = await this.props.fetchWarrantyWOData(dtlsID, token)                  \r\n    }\r\n\r\n    handleAsyncId = (id) => {\r\n        dtlsID = id\r\n        this.handleId(dtlsID)\r\n    }\r\n    //Change details data\r\n    handleChangePrevState = (id) => {\r\n        dtlsID = id     \r\n        this.setState({\r\n            detailsId: dtlsID,\r\n            loading: true\r\n        }, this.handleAsyncId(id))        \r\n    }\r\n    //move active item to the top of grid\r\n    // array_move = (arr, old_index, new_index) => {\r\n    //     if (new_index >= arr.length) {\r\n    //         let k = new_index - arr.length + 1;\r\n    //         while (k--) {\r\n    //             arr.push(undefined);\r\n    //         }\r\n    //     }\r\n    //     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    //     return arr;\r\n    // };\r\n    // isCurrent = (element) => element.workOrderId.toString() === this.state.detailsId.toString();\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n\r\n        const currentState = this.state.targetId\r\n        //const props = this.props\r\n        const searchTermIn = this.state.searchTerm\r\n        const searchByIn = this.state.searchBy  \r\n        const filterByInByAssetType = this.state.filterByAssetType\r\n        const filterByInByStatus = this.state.filterByStatus\r\n        const filterByInByPriority = this.state.filterByPriority\r\n        if(\r\n            prevState.targetId !== this.state.targetId ||\r\n            prevState.detailsId !== this.state.detailsId ||\r\n            prevState.searchTerm !== this.state.searchTerm ||\r\n            prevState.searchBy !== this.state.searchBy ||\r\n            prevState.filterByAssetType !== this.state.filterByAssetType ||\r\n            prevState.filterByStatus !== this.state.filterByStatus ||\r\n            prevState.filterByPriority !== this.state.filterByPriority ||\r\n            prevState.newNoteAvailable !== this.state.newNoteAvailable ||\r\n            prevState.updatedStatus !== this.state.updatedStatus ||\r\n            prevState.reassignToAvailable !== this.state.reassignToAvailable\r\n        ) {\r\n            this.setState({loading: true})\r\n            //Clean input if lenght is 0\r\n            if(searchTermIn.length===0) {\r\n                this.setState({\r\n                    searchTerm: \"\",\r\n                })\r\n            }       \r\n            //Set/Search/Filter data for DataTable Component\r\n            /*\r\n            let incomingData = setSearchFilterHelper({\r\n                tmpdata,\r\n                searchTerm,\r\n                searchTermIn,\r\n                searchByIn,\r\n                filterByInByAssetType,\r\n                filterByInByStatus,\r\n                filterByInByPriority,\r\n                currentState,\r\n                props\r\n            })\r\n            incomingData.then(res => {\r\n                console.log(res)\r\n                tmpdata = res\r\n            })\r\n            */\r\n            switch (currentState) {\r\n                /**\r\n                 * All \"term\" arrays elements should be modified in order\r\n                 * to work with the new APIs\r\n                 */\r\n                //Each case should be the CTA id\r\n                case \"emergencyWO\":\r\n                    if(searchTermIn.length>3 && searchByIn<=1) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        if(filterByInByAssetType.length>0){\r\n                            let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                            dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                            if(filterByInByPriority.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                                })\r\n                            } else if(filterByInByStatus.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                                })                         \r\n                            }\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                            \r\n                        } else {\r\n                            let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                            console.log(dataSearched)\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            } \r\n                        }\r\n                    }else if(searchTermIn.length>3 && searchByIn>1){\r\n                        let tmp = await this.props.fetchSearchData()\r\n                        let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                             \r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                                                      \r\n                        } else if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }   \r\n                        } else {\r\n                            tmpdata = await this.props.fetchSearchData()\r\n                        }                        \r\n                    //Default filter by asset type without search                        \r\n                    }else if(filterByInByAssetType.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }\r\n                    //Default filter by status without search   \r\n                    }else if(filterByInByStatus.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }  \r\n                    //Default filter by priority without search   \r\n                    }else if(filterByInByPriority.length>0) {\r\n                        let tmp = await this.props.fetchEmergencyWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                              \r\n                    }else if(searchTermIn.length === 0 && this.state.firstLoading === false) {\r\n                        tmpdata = await this.props.fetchEmergencyWOData()\r\n                    }                \r\n                    break; \r\n                case \"openWO\":\r\n                    if(searchTermIn.length>3 && searchByIn<=1) {\r\n                        let tmp = await this.props.fetchOpenWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        if(filterByInByAssetType.length>0){\r\n                            let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                            dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                            if(filterByInByPriority.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                                })\r\n                            } else if(filterByInByStatus.length>0) {\r\n                                dataSearched = dataSearched.filter(term => {\r\n                                    let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                    return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                                })                         \r\n                            }\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                            \r\n                        } else {\r\n                            let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                            console.log(dataSearched)\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            } \r\n                        }\r\n                    }else if(searchTermIn.length>3 && searchByIn>1){\r\n                        let tmp = await this.props.fetchSearchData()\r\n                        let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                             \r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }                                                      \r\n                        } else if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                            tmpdata = {\r\n                                data: {\r\n                                    work_orders: dataSearched\r\n                                }\r\n                            }   \r\n                        } else {\r\n                            tmpdata = await this.props.fetchSearchData()\r\n                        }                        \r\n                    //Default filter by asset type without search                        \r\n                    }else if(filterByInByAssetType.length>0) {\r\n                        let tmp = await this.props.fetchOpenWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }\r\n                    //Default filter by status without search   \r\n                    }else if(filterByInByStatus.length>0) {\r\n                        let tmp = await this.props.fetchOpenWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }  \r\n                    //Default filter by priority without search   \r\n                    }else if(filterByInByPriority.length>0) {\r\n                        let tmp = await this.props.fetchOpenWOData()\r\n                        let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                        let dataSearched = dataSearch.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        if(filterByInByAssetType.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }                        \r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                              \r\n                    }else if(searchTermIn.length === 0 && this.state.firstLoading === false) {\r\n                        tmpdata = await this.props.fetchOpenWOData()\r\n                    }                \r\n                    break; \r\n                case \"pendingWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchPendingWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchPendingWOData()\r\n                }                \r\n                break;                   \r\n                case \"assignedWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchAssignedToMeWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchAssignedToMeWOData()\r\n                }                \r\n                break; \r\n                case \"unassignedWO\":\r\n                if(searchTermIn.length>3 && searchByIn<=1) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    if(filterByInByAssetType.length>0){\r\n                        let dataSearched = dataSearch.filter(term => term['description'].includes(searchTerm.toLowerCase()))\r\n                        dataSearched = dataSearched.filter(term => term['asset']['assetType']['description'].toLowerCase().includes(filterByInByAssetType.toLowerCase()))\r\n                        if(filterByInByPriority.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                            })\r\n                        } else if(filterByInByStatus.length>0) {\r\n                            dataSearched = dataSearched.filter(term => {\r\n                                let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                                return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                            })                         \r\n                        }\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                            \r\n                    } else {\r\n                        let dataSearched = dataSearch.filter(term => term['workOrderId'].toString().includes(searchTerm))\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        } \r\n                    }\r\n                }else if(searchTermIn.length>3 && searchByIn>1){\r\n                    let tmp = await this.props.fetchSearchData()\r\n                    let dataSearched = tmp.data?tmp.data.work_orders:[]                        \r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                             \r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }                                                      \r\n                    } else if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                        tmpdata = {\r\n                            data: {\r\n                                work_orders: dataSearched\r\n                            }\r\n                        }   \r\n                    } else {\r\n                        tmpdata = await this.props.fetchSearchData()\r\n                    }                        \r\n                //Default filter by asset type without search                        \r\n                }else if(filterByInByAssetType.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                    })\r\n                    if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }\r\n                //Default filter by status without search   \r\n                }else if(filterByInByStatus.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByPriority.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }  \r\n                //Default filter by priority without search   \r\n                }else if(filterByInByPriority.length>0) {\r\n                    let tmp = await this.props.fetchUnassignedWOData()\r\n                    let dataSearch = tmp.data?tmp.data.work_orders:[]\r\n                    let dataSearched = dataSearch.filter(term => {\r\n                        let notNull = term['priority']!==null?term['priority']['description']:\"\"\r\n                        return notNull.toLowerCase().includes(filterByInByPriority.toLowerCase())\r\n                    })\r\n                    if(filterByInByAssetType.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['asset']!==null?term['asset']['assetType']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByAssetType.toLowerCase())\r\n                        })\r\n                    } else if(filterByInByStatus.length>0) {\r\n                        dataSearched = dataSearched.filter(term => {\r\n                            let notNull = term['status']!==null?term['status']['description']:\"\"\r\n                            return notNull.toLowerCase().includes(filterByInByStatus.toLowerCase())\r\n                        })                         \r\n                    }                        \r\n                    tmpdata = {\r\n                        data: {\r\n                            work_orders: dataSearched\r\n                        }\r\n                    }                                              \r\n                }else {\r\n                    tmpdata = await this.props.fetchUnassignedWOData()\r\n                }                \r\n                break;                                                       \r\n                default:\r\n                    tmpdata = await this.props.fetchEmergencyWOData()\r\n                    break;\r\n            }\r\n        \r\n            const handleId = async(dtlsID) => {\r\n                if(this.state.firstLoading === false) {\r\n                    detailsdata = await this.props.fetchDetailsWOData(dtlsID, token)\r\n                    notesdata = await this.props.fetchNotesWOData(dtlsID, token)\r\n                    serviceProviders = await this.props.fetchServiceProviders(dtlsID, token);\r\n                    // this.sortOrderNotesByDate()\r\n                    attachmentsdata = await this.props.fetchAttachmentsWOData(dtlsID, token)\r\n                    historydata = await this.props.fetchHistoryWOData(dtlsID, token)\r\n                    warrantydata = await this.props.fetchWarrantyWOData(dtlsID, token)\r\n                }\r\n                this.setState({loadingDetails: false})\r\n            }\r\n            //Change details data\r\n            const handleChangePrevState = (dtlsID) => {\r\n                const id = dtlsID\r\n                handleId(id)\r\n            }\r\n\r\n            // let currentIndex =  tmpdata.data.work_orders.findIndex(this.isCurrent);\r\n            // if(currentIndex === -1) currentIndex = 0\r\n            // this.array_move(tmpdata.data.work_orders, currentIndex, 0)\r\n\r\n            const prevSteDtls = prevState.detailsId\r\n            const currentSteDtls = this.state.detailsId\r\n            const tmpDtls = tmpdata.data!==undefined?\r\n                                (tmpdata.data.work_orders!==null?\r\n                                    (tmpdata.data.work_orders[0]!==undefined?\r\n                                        tmpdata.data.work_orders[0]['workOrderId']:\r\n                                        dtlsID):dtlsID):\r\n                                        dtlsID\r\n            //Choose if details preview it's based on the first response element or the selected by the user when clicks the row\r\n            if( prevSteDtls !== ''){\r\n                if( prevSteDtls !== currentSteDtls ) {\r\n                    this.setState({\r\n                        detailsId: dtlsID,\r\n                        loadingDetails: true\r\n                    }, handleChangePrevState(dtlsID)) \r\n                } else {\r\n                    dtlsID = tmpDtls             \r\n                    this.setState({\r\n                        detailsId: dtlsID,\r\n                    }, handleChangePrevState(dtlsID))    \r\n                }\r\n            }\r\n            \r\n            const prevNoteStatus = prevState.newNoteAvailable\r\n            const currentNoteStatus = this.state.newNoteAvailable\r\n            if( prevNoteStatus !== currentNoteStatus) {\r\n                newNote = await this.props.createNoteWOData(noteDescription, dtlsID, token, userId)\r\n                this.setState({\r\n                    newNote: newNote.data,\r\n                    loadingDetails: true\r\n                }, handleChangePrevState(dtlsID))\r\n            }\r\n\r\n            const prevUpdatedStatus = prevState.updatedStatus\r\n            const currentUpdatedStatus = this.state.updatedStatus\r\n            if( prevUpdatedStatus !== currentUpdatedStatus) {\r\n                console.log(\"USERID\", userId)\r\n                workOrderUpdateResponse = await this.props.updateWOStatus(dtlsID, token, updatedStatus, reassignToVal, userId)\r\n                if(workOrderUpdateResponse) {\r\n                    this.setState({\r\n                        workOrderUpdateResponse: workOrderUpdateResponse,\r\n                        loadingDetails: true\r\n                    }, handleChangePrevState(dtlsID))\r\n                } else {\r\n                    alert(\"Server Error Occured\")\r\n                }\r\n            }\r\n\r\n            // console.log(\"dltsID\", this.state.deta)\r\n            //Normalize state to avoid missing data or state changes\r\n            this.setState({\r\n                detailsId: dtlsID,\r\n                targetId: this.state.targetId,\r\n                loading: false\r\n            }, handleChangePrevState(dtlsID))\r\n            this.sortWOByCreatedDate(tmpdata.data.work_orders) \r\n            console.log(\"tmpdata\", tmpdata);\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const globalState = {\r\n            dynamicDetails: this.dynamicDetails,\r\n            dynamicData: this.dynamicData,\r\n            handleSearchTerm: this.handleSearchTerm,\r\n            handleSearchBy: this.handleSearchBy,\r\n            handleFilterByAssetType: this.handleFilterByAssetType,\r\n            handleFilterByStatus: this.handleFilterByStatus,\r\n            handleFilterByPriority: this.handleFilterByPriority,\r\n            handleFilterClearAll: this.handleFilterClearAll,\r\n            createNoteWOData: this.createNoteWOData,\r\n            updateWOStatus: this.updateWOStatus,\r\n            handleNoteInput: this.handleNoteInput,\r\n            handleReassignToSelect: this.handleReassignToSelect,\r\n            reassignToVal: this.state.reassignToVal,\r\n            currentDtlsId: this.state.detailsId,\r\n            noteDescription: this.state.noteDescription,\r\n            filterByStateAssetType: this.state.filterByAssetType,\r\n            filterByStateStatus: this.state.filterByStatus,\r\n            filterByStatePriority: this.state.filterByPriority,                        \r\n            searchByState: this.state.searchBy,\r\n            searchTermState: this.state.searchTerm,\r\n        }\r\n        return (\r\n            <GlobalContext.Provider value={globalState}>\r\n                <div className=\"work-orders-container\">\r\n                    <Alert severity=\"warning\" variant=\"filled\">\r\n                        <Link href=\"/admin/WorkOrders\" target=\"_blank\" rel=\"noopener\" color=\"inherit\">\r\n                            <i>Missing Something? Go to the Old Version</i>\r\n                        </Link>\r\n                    </Alert>\r\n                    <Grid className=\"cta-section-component\">\r\n                        <CTASectionComponent \r\n                            ctadata={ctadata}\r\n                            tmpdata={tmpdata}\r\n                            targetdata={trgtID} \r\n                        />\r\n                    </Grid>            \r\n                    <Grid container className=\"content-section\">\r\n                        <Grid item xs={12} md={7} lg={7}>\r\n                            <DataTableComponent\r\n                                tmpdata={tmpdata}\r\n                                loading={this.state.loading}\r\n                                firstLoading={this.state.firstLoading}\r\n                            />\r\n                        </Grid>        \r\n                        <Grid item xs={12} md={5} lg={5}>\r\n                            <WorkOrderDetailsComponent\r\n                                loadingDetails={this.state.loadingDetails}\r\n                                detailsdata={detailsdata}\r\n                                history={historydata} \r\n                                attachments={attachmentsdata} \r\n                                notes={notesdata}\r\n                                serviceProviders={serviceProviders}\r\n                                firstLoading={this.state.firstLoading}\r\n                                warranty={warrantydata}\r\n                            />\r\n                        </Grid>  \r\n                    </Grid>  \r\n                </div>   \r\n            </GlobalContext.Provider>                   \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    oauthFetchToken: () => dispatch(oauthFetchToken()),\r\n    fetchCTAsData: () => dispatch(fetchCTAsData(token, userId)),   \r\n    fetchSearchData: () => dispatch(fetchSearchData(searchTerm, searchBy, token, userId)),   \r\n    fetchWarrantyWOData: () => dispatch(fetchWarrantyWOData(dtlsID, token)),   \r\n    fetchPendingWOData: () => dispatch(fetchPendingWOData(token, userId)),\r\n    fetchEmergencyWOData: () => dispatch(fetchEmergencyWOData(token, userId)),\r\n    fetchOpenWOData: () => dispatch(fetchOpenWOData(token, userId)),\r\n    fetchUsersInformation: () => dispatch(fetchUsersInformation(token)),\r\n    fetchDetailsWOData: () => dispatch(fetchDetailsWOData(dtlsID, token)),\r\n    updateWOStatus: () => dispatch(updateWOStatus(dtlsID, token, updatedStatus, reassignToVal, userId)),\r\n    fetchServiceProviders: () => dispatch(fetchServiceProviders(dtlsID, token)),\r\n    fetchAssignedToMeWOData: () => dispatch(fetchAssignedToMeWOData(token, userId)),\r\n    fetchUnassignedWOData: () => dispatch(fetchUnassignedWOData(token, userId)),\r\n    fetchHistoryWOData: () => dispatch(fetchHistoryWOData(dtlsID, token)),\r\n    fetchNotesWOData: () => dispatch(fetchNotesWOData(dtlsID, token)),\r\n    createNoteWOData: () => dispatch(createNoteWOData(noteDescription, dtlsID, token, userId)),\r\n    fetchAttachmentsWOData: ()=> dispatch(fetchAttachmentsWOData(dtlsID, token)),\r\n})\r\n\r\n\r\nconst WorkOrdersContainer = connect(mapStateToProps, mapDispatchToProps)(WorkOrdersBuilder)\r\n\r\nexport default WorkOrdersContainer;","E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\faker\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\context\\globalcontext\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\oauthtokenreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\useraccountdatareducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\ctasectionreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\emergencyworkordersreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderassignedtomereducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderunassignedreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\pendingworkordersreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workordersnotesreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderdetailsreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workorderattachmentsreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\workordershistoryreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\warrantymodalreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\advancedsearchreducer\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\faker\\ctasectionactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\oauthtokenactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\warrantymodalactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workordernotesactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderhistoryactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderattachmentsactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\advancedsearchactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\workorderdetailsactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\constants\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\assignedtomeworkordersactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\openworkordersactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\pendingworkordersactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\unassignedworkordersactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\ctasectionactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\emercencyworkordersactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\actions\\useraccountdataactions\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\alertComponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\advancedsearchcomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\index.js",["442"],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\reducers\\initialstate\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\common\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbypriority\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\locationdetailslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderprioritylayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderregularrowlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rowbuilderlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderstatuslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\reactwindowtablelayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\tablecolumnslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\renderimagelayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendersingleitemlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\layouts\\rendermultiitemlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\boxeddetailslayout\\index.js",[],["443","444"],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\enhanceddetailslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\ctasectionlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\ctasectioncomponent\\layouts\\featuredctalayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\workorderdesriptionclayout\\index.js",["445","446"],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\linkactionslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\maindetailslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\mainactionslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\modalcomponent\\helpers\\getmodalstyle\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbystatus\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\layouts\\detailsimagelayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\filteringcomponent\\helpers\\filterbyassettype\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernull\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\helpers\\rendernotnull\\index.js",["447"],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rowbuilderlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\reactwindowtablelayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\tablecolumnslayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\constants\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\renderdateitemlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendersingleitemlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\layouts\\rendermultiitemlayout\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\popupcomponent\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\workorderdetailscomponent\\constants\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\cancel.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\reassigned.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\complete.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\not-fixed.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\assets\\icons\\add-note.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\createitemdatahelper\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\datatablecomponent\\helpers\\itemkeyhelper\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\itemkeyhelper\\index.js",[],"E:\\JohnsWork\\2021.1.7\\lp-work-orders-react\\src\\components\\tabscomponent\\helpers\\createitemdatahelper\\index.js",[],{"ruleId":"448","severity":1,"message":"449","line":43,"column":5,"nodeType":"450","messageId":"451","endLine":43,"endColumn":22},{"ruleId":"448","severity":1,"message":"452","line":55,"column":5,"nodeType":"450","messageId":"451","endLine":55,"endColumn":13},{"ruleId":"448","severity":1,"message":"453","line":70,"column":20,"nodeType":"450","messageId":"451","endLine":70,"endColumn":32},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"448","severity":1,"message":"458","line":7,"column":22,"nodeType":"450","messageId":"451","endLine":7,"endColumn":28},{"ruleId":"448","severity":1,"message":"459","line":9,"column":8,"nodeType":"450","messageId":"451","endLine":9,"endColumn":16},{"ruleId":"448","severity":1,"message":"460","line":55,"column":9,"nodeType":"450","messageId":"451","endLine":55,"endColumn":26},"no-unused-vars","'fetchCTAsDataTEST' is defined but never used.","Identifier","unusedVar","'userData' is defined but never used.","'historyCount' is assigned a value but never used.","no-native-reassign",["461"],"no-negated-in-lhs",["462"],"'Button' is defined but never used.","'EditIcon' is defined but never used.","'invoiceStatusDesc' is defined but never used.","no-global-assign","no-unsafe-negation"]